一、学习要点：
    1、正则表达式语法（Perl 风格）
    2、正则表达式中的元素
    3、Perl风格函数
    
    
二、Perl风格函数
    1.preg_grep()：返回与模式匹配的数组单元
      preg_grep()函数搜索数组中的所有元素，返回由于某个匹配模式的所有元素组成的数组。
      $language=array('php','asp','jsp','python','ruby');
      $mode='/p$/'
      print_r(preg_grep($mode,$language));
      
    2.preg_match()
      preg_match()函数在字符串中搜索模式，如果存在则返回true，否则返回false.
      echo preg_match('/php[1-6]/',php5);
      //通过拆分的方法分组
      $mode='/([\w\.]{2,255})@([\w\-]{1,255}).([a-z]{2,4})/';
      $string='bnbbs@163.com'
    3.preg_match_all()：进行全局正则表达式的匹配
      preg_match_all()函数在字符串中匹配模式的所有出现，然后将所有匹配到的全部放入数组。
      //将字符串的所有匹配得到的结果放到一个数组变量里
      preg_match_all('/php[1-6]/','php5sdkdjdphp6sdfdojphp4',$out);
      print_r($out[0][0]);
    4.preg_quote()
      preg_quote()在每个对于正则表达式语法而言有特殊含义的字符前插入一个反斜杠。
                                                这些特殊字符包含：$^*()+={}|\\:<>.
                                                定界正则
                  echo preg_quote('PHP is $150');                              
                                                输出PHP is \$150;
    5.preg_replace()
      preg_replace()函数搜索到所有匹配，然后替换成想要的字符串返回出来。
      //第一个参数，放的是正则的模式
      //第二个参数，放的是替换掉的字符串
      //第三个参数，字符串
      echo preg_replace('/php[1-6]/','python','This is a php5,This is a php4');
      
      //贪婪和分组获取的案例，ubb
      //我要将这个[b][/b]换成<strong>php5<strong>;
      //.表示匹配任意字符的一个，加上一个*号表示匹配零个或者多个。
      //用括号分为三组  第一组是\1,第二组是\2,第三组是\3.
      //解决贪婪问题 U
      $mode='/\[b\](.*)\[\/b\]/U'
      $replace='<strong>\2<strong>';
      $string='This is a [b]php5[\b],This is a [b]php4[\b]';
      echo preg_replace($mode,$replace,$string);
      
      
    6.preg_replace_callback()
    
    7.preg_split()
                以不区分大小写的方式将字符串划分为不同的元素：preg_split()用来分割不同的元素
      //用正则表达式来进行分割
      //如果没有[]符号，就表示，要同时满足
      print_r(preg_split('/[.@q]/','yc60.com@gmail.com'));
                
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    