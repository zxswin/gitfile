一、字符串比较
    1、strcmp(str1,str2):
    如果两个字符串相等，返回0；如果按照字典顺序，str1大于str2就返回一个正数。如果str1小于str2就返回一个负数。这个函数是区分大小写的。
    2、strcasecmp()：除了不区分大小写之外，其他和strcmp()一样。
    3、strnatcmp()：这两个函数按"自然排序"比较字符串，不区分大小写。自然排序就是按人们习惯的顺序排序。
    
    4、使用strspn()函数返回一个字符串中包含有另一个字符串字符的第一部分的长度。
    //后面两个数字的参数，是从第几位开始，取多少位。
    echo strspn('com','yc60.com@gmail.com',1,2)
    
    5、使用strlen()函数测试字符串的长度
        echo strlen(This is a Teacher!);
    6、确定字符串出现的频率：substr_count()返回一个字符串在另一个字符串中出现的次数。
        echo substr_count('yc60.com@gmail.com','c');3
    7、strstr：返回字符串中某字符串开始处至结束的字符串。
       //从指定的字符串开始输出之后的字符串
       echo strstr('yc60.com@gmail.com','@');
       //不区分大写的
       echo stristr('yc60.com@Gmail.com','g');
    8、strpos：寻找字符串中某字符最先出现处。
    //位置从第0个开始计算，c第一次出现在第1个位置上
    echo strpos('yc60.com@gmail.com','c');
    9、strrpos:寻找字符串中某字符最后出现处。
    //最后出现的位置
    echo strrpos('yc60.com@gmail.com','c');
    
    10、str_replace:字符串取代
    //第一个参数表示要查找的字符串(部分)
    //第二个参数表示要替换额字符串（部分）
    //第三个参数表示原来的被替换的完整字符串。
    echo str_replace('Lee','Wq','This is Lee!');
    
    11、str_ireplace是不区分大小写的。
    12、substr_replace():
    //从第一个位置开始（参数3），取出5个来（参数4），将它替换成&&&(参数2)；
    echo substr_replace('yc60.com@gmail.com','&&&',0,5);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    