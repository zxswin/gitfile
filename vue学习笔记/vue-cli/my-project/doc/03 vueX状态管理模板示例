/*store/index.js*/

import Vue from 'vue';
import Vuex from 'vuex';
import mutations from './mutations';
import actions from './action';
import getters from './getters';
import moduleA from './modules/cart';


Vue.use(Vuex); //引入vue插件


const state = {
	count: 0
}

export default new Vuex.Store({
    modules:{
        cart: moduleA,
    },
    state, //状态变量
    mutations, //改变存储状态
    actions,   //间接改变存储变量状态
    getters    //改变存储变量,类似于计算属性
})


/*store/mutations.js*/
import { SOME_MUTATION } from './mutation-types'

export default {

    [SOME_MUTATION](state,payload) {
        state.count+=payload
    }

}

/*store/getters.js*/
export default {

    doneTodos:(state) => {
        return [1,2,3];
    },
    doneTodosCount: (state, getters) => {
        let count = state.count + getters.doneTodos.length
        return count
    },
    getTodoById: (state) => (id) => {
        return id*state.count
    }

}

/*store/action.js*/
import { SOME_MUTATION } from './mutation-types'

export default {
    incrementAsync ({ commit },payload) {
        commit(SOME_MUTATION,payload)
    }
}

/*store/mulation-types.js*/
export const SOME_MUTATION = 'SOME_MUTATION'
/*modules/cart.js*/
const state = {
    useName: "sam"
};
const mutations = {

};
const actions = {

};
const getters = {

};

export default {
    state,
    mutations,
    actions,
    getters
}

/*component.js中*/


methods: {
    incrementAsync:function(){
      this.$store.dispatch('incrementAsync',100); //派发action
      this.count1 = this.$store.state.count;  //获取状态树中的变量
      console.log('this.$store.state.count;',this.$store.state.count);
      console.log('this.$store.getters',this.$store.getters.doneTodosCount);
      console.log('getTodoById',this.$store.getters.getTodoById(10));
    }
  },
  computed:{
    countNum:function(){
      return this.$store.getters.getTodoById(10)
    }
  },
