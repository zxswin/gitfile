一.正则表达式
   复习字符串操作
   .indexOf         查找
   .substring       获取子字符串
   .charAt          获取某个字符
   .split           分割字符串,获取数组

   找出字符串中所有数字
   .用传统字符串操作完成
   .用正则表达式完成

二.正则表达式的常用方法
   1.test
      字符串判断
          -返回真假
          -正则.test(字符串)
          -例子：是否有不是数字的字符
   2.search
     .字符串搜索
       -返回出现的位置
       -字符串.search(正则)
       -忽略大小写：i-----ignore.

    3.match
     .获取匹配的项目
      --返回数组
      --量词：+
      --全局匹配：g----global
      --例子：找出所有数字

   4.replace
     .替换所有匹配
      --返回替换后的字符串
      --字符串.replace(正则,想替换的)
      --例子：敏感词过滤

      --匹配子项
      --例子：日期格式化

   5.正则表达式的字符类
   任意字符
   .[abc]
   --例子：o[usb]t------obt、ost、out
   范围：
   .[a-z]、[0-9]
   --例子：id[0-9]----id0、id5
   排除
   .[^a]
   --例子：o[^0-9]t------oat、o?t、ot


    6.正则表达式字符类
    .组合[a-z0-9A-Z]
    .实例：偷小说
    过滤HTML标签
      -自定义innerText方法

    7.转义字符
    .(点)----任意字符
    \d  \w   \s   \b(独立的部分) 即 起始，结束，空格
    \D  \W   \S   \B(非独立的部分)
    \1  重复子项
    .例子
    --获取class元素
    --找重复项最多的字符和个数。

注意：
  当正则需要传参的时候，一定要用全称的写法。
  var re=new RegExp('\\b'+sClass+'\\b');

   7.量词
   .什么是量词
    出现的次数
    {n,m}至少出现n次,最多出现m次
    例子查找QQ号
    .常用量词
    {n,}至少n次
    * 任意次{0,}
    ?零次或者1次{0,1}
    +一次或者任意次{1,}
    {n}正好n次

    8.正则收尾
    ^开始
    $结束
    .例子：
       -不是不QQ号
       -去掉前后空格

    10.高级表单验证
    匹配中文：[\u4e00-\u9fa5]
    行首行尾空格：^\s*|\s*$
    Email:^\w+@[a-z0-9]+(\.[a-z]+){1,3}$
    网址：[a-zA-Z]+://[^\s]*
    QQ号：^[1-9][0-9]{4,9}$
    邮政编码：[1-9]\d{5}
    身份证：[1-9]\d{14}|[1-9]\d{17}|[1-9]\d{16}x
