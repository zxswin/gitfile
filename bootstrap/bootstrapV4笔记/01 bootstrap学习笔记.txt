一.布局容器
如果是移动端页面：
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

Bootstrap 需要为页面内容和栅格系统包裹一个 .container 容器
.container 类用于固定宽度并支持响应式布局的容器。
.container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器
使用.no-gutters来去除row的margin，以及其下columns的padding。

@media (min-width: 1200px)
.container {
    max-width: 1140px;
}

二.栅格参数(总是水平排列)
1.各类屏幕
.col-	超小屏幕 手机 (<768px)
.col-sm-	小屏幕 平板 (≥768px)
.col-md-	中等屏幕 桌面显示器 (≥992px) 
.col-lg-    大屏幕 大桌面显示器 (≥1200px)

2.各类.col默认样式,在移动端宽度也是100%
{
    position: relative;
    width: 100%;
    min-height: 1px;
    padding-right: 15px;
    padding-left: 15px;
}

3.使用.col-表示移动设备均水平排列
.col-4.col-md-4.border-black 1
.col-4.col-md-4.border-black 2
.col-4.col-md-4.border-black 3

4.当屏幕为平板电脑水平排列@media (min-width: 576px)小于576会排成多排
.col-sm-4.col-md-4.border-black 1
.col-sm-4.col-md-4.border-black 2
.col-sm-4.col-md-4.border-black 3

5.移动端会自动排成多排
.col-md-4.border-black 1
.col-md-4.border-black 2
.col-md-4.border-black 3

6.设置为等宽栅格
.col 1
.col 1

7..col-md-auto类实现内容自适应宽度
.col.border-black 1
.col-md-auto.border-black 2
.col-md-4.border-black 3

8.垂直对齐 Vertical alignment
加在row上面
align-items-start
align-items-center
align-items-end

.row.align-items-end
  .col.h-50 1
  .col 2
  .col 3

加在子元素身上
.row.
  .col.h-50.align-self-center 1
  .col 2
  .col.align-self-end 3

9.no-gutters 无间隙类
在row上加 下面的col也没有间隙了
.container 或者 .container-fluid本身就间隙

10.通过order类来实现排序效果
.order-first
.order-last
.col.order-12 1
.col 2
.col.order-1 3

11..offset- 位移类
.offset-md-4会向右位移4个column宽度的位置。
.col-4 1
.col-4.offset-md-4 2
.col-4 3 //第三个会被挤下去

12..ml-auto 类 强制相邻的块彼此分开
.ml-auto {
    margin-left: auto!important;
}
.col-4 1
.col-4.ml-auto 2

13.嵌套
.wrap
  .container-fluid
    .row
      .col-8
        .row
          .col-4 1
          .col-4 1
          .col-4 1
      .col-4 2

三.文字排版
1.Bootstrap 4 默认的 font-size 为 16px, line-height 为 1.5。
2.默认的 font-family 为 "Helvetica Neue", Helvetica, Arial, sans-serif。
3.此外，所有的 <p> 元素 margin-top: 0 , margin-bottom: 1rem (16px)。
4.输出更大更粗的标题
display-1 -最大最粗
display-2
display-3
display-4
5.<small> 元素用于创建字号更小的颜色更浅的文本:
6.<mark> 为黄色背景及有一定的内边距:
7.<abbr> 元素的样式为显示在文本底部的一条虚线边框:
8.对于引用的内容可以在 <blockquote> 上添加 .blockquote 类 :
9.其他元素
<dl> 元素
<code> 元素
<kbd> 元素
<pre> 元素
10.排版类
.font-weight-bold	加粗文本
.font-weight-normal	普通文本
.font-weight-light	更细的文本
.font-italic	斜体文本
.lead	让段落更突出
.small	指定更小文本 (为父元素的 85% )
.text-left	左对齐
.text-center	居中
.text-right	右对齐
.text-justify	设定文本对齐,段落中超出屏幕部分文字自动换行
.text-nowrap	段落中超出屏幕部分不换行
.text-lowercase	设定文本小写
.text-uppercase	设定文本大写
.text-capitalize	设定单词首字母大写
.initialism	显示在 <abbr> 元素中的文本以小号字体展示，且可以将小写字母转换为大写字母
.list-unstyled	移除默认的列表样式，列表项中左对齐 ( <ul> 和 <ol> 中)。 这个类仅适用于直接子列表项 (如果需要移除嵌套的列表项，你需要在嵌套的列表中使用该样式)
.list-inline	将所有列表项放置同一行
.pre-scrollable	使 <pre> 元素可滚动，代码块区域最大高度为340px,一旦超出这个高度,就会在Y轴出现滚动条

四.颜色类
1.代表意义的颜色类
text-muted 柔和的 淡灰色
text-primary 重要的 蓝色
text-success 成功的 绿色
text-info 提示性文本 青色
text-warning 警告文本 黄色
text-danger 危险操作 红色
text-secondary 副标题 淡灰色
text-dark  深灰色文字
text-light 很淡的灰色
text-white 白色文本

2.设置背景颜色类
bg-primary 重要的 蓝色
bg-success  绿色
bg-info  青色
bg-warning  黄色
bg-danger  红色
bg-secondary 淡灰色
bg-dark   深灰色
bg-light  很淡的灰色

五.表格类
1.table设置类
table.table.table-bordered.table-hover
.table 类来设置基础表格的样式
.table-striped 类可以在行上看到条纹
.table-bordered 类可以为表格添加边框
.table-hover 类可以为表格的每一行添加鼠标悬停效果（灰色背景）
.table-dark 类可以为表格添加黑色背景
2.表格颜色类
tr.table-primary
.table-primary	蓝色: 指定这是一个重要的操作
.table-success	绿色: 指定这是一个允许执行的操作
.table-danger	红色: 指定这是可以危险的操作
.table-info	浅蓝色: 表示内容已变更
.table-warning	橘色: 表示需要注意的操作
.table-active	灰色: 用于鼠标悬停效果
.table-secondary	灰色: 表示内容不怎么重要
.table-light	浅灰色，可以是表格行的背景
.table-dark	深灰色，可以是表格行的背景
.thead-dark 类用于给表头添加黑色背景， .thead-light 类用于给表头添加灰色背景:
thead.thead-light
3.table-sm类设置较小的表格,行高变小
4.table-responsive类用于创建响应式表格
在屏幕宽度小于 992px 时会创建水平滚动条，如果可视区域宽度大于 992px 则显示不同效果（没有滚动条）
设定在指定屏幕宽度下显示滚动条：
.table-responsive-sm	< 576px
.table-responsive-md	< 768px
.table-responsive-lg	< 992px
.table-responsive-xl	< 1200px

六.图像形状
1.rounded 类可以让图片显示圆角效果
2.rounded-circle 类可以设置椭圆形图片
3.img-thumbnail 类用于设置图片缩略图(图片有边框):
4.float-right 类来设置图片右对齐，使用 .float-left 类设置图片左对齐
6..img-fluid 类来设置响应式图片

七.信息提示框
1.使用 .alert 类, 后面加上指定特定意义的颜色类来实现
.alert-success
.alert-info
.alert-warning
.alert-danger
.alert-primary
.alert-secondary
.alert-dark
.alert-light
2.添加 alert-link 类来设置匹配提示框颜色的链接
3.关闭提示框
添加 .alert-dismissable 类，然后在关闭按钮的链接上添加 class="close" 和 data-dismiss="alert" 类来设置提示框的关闭操作。
&times; (×) 是 HTML 实体字符，来表示关闭操作，而不是字母 "x"
.alert.alert-success.alert-dismissable
  button.close(type="button",data-dismiss="alert") &times;
  strong 成功
  |提示操作成功提示信息
4.提示框动画
.fade 和 .show 类用于设置提示框在关闭时的淡出和淡入效果：
.alert.alert-success.alert-dismissable.fade.show

八.按钮
1.基本按钮
button.btn.btn-primary(type="button") 主要按钮
.btn
.btn-primary
.btn-secondary
.btn-success
.btn-info
.btn-warning
.btn-danger
.btn-dark
.btn-light
.btn-link
2.按钮设置边框
button.btn.btn-outline-success(type="button") 成功按钮
.btn-outline-primary
.btn-outline-secondary
.btn-outline-success
.btn-outline-info
.btn-outline-warning
.btn-outline-danger
.btn-outline-dark
.btn-outline-light
3.不同大小的按钮
.btn-lg 大号按钮类
.btn-sm 小号按钮
4.块级按钮
.btn-block 类可以设置块级按钮
5.激活和禁用的按钮
.active 类可以设置按钮是可用的， disabled 属性可以设置按钮是不可点击的。 
注意 <a> 元素不支持 disabled 属性，你可以通过添加 .disabled 类来禁止链接的点击。

九.按钮组
1.默认按钮组
.btn-group
  .btn.btn-primary Apple
  .btn.btn-primary Apple
  .btn.btn-primary Apple

2.btn-group-lg|sm|xs来设置按钮组的大小。
3.btn-group-vertical 类来创建垂直的按钮组：
4.内嵌按钮组及下拉菜单
.btn-group
  button.btn.btn-primary(type="button") Apple
  button.btn.btn-primary(type="button") Apple
  .btn-group
    button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Sony
    .dropdown-menu
      a.dropdown-item Tablet
      a.dropdown-item Tablet
5.拆分按钮下拉菜单
button.btn.btn-primary(type="button") Sony
  button.btn.btn-primary.dropdown-toggle.dropdown-toggle-split(type="button",data-toggle="dropdown")
    span.caret
  .dropdown-menu
    a.dropdown-item Table
    a.dropdown-item Table
6.垂直按钮组及下拉菜单
.btn-group-vertical
  button.btn.btn-primary(type="button") Apple
  button.btn.btn-primary(type="button") Apple
  .btn-group
    button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Sony
    .dropdown-menu
      a.dropdown-item dropdown-item
      a.dropdown-item dropdown-item

九.徽章（Badges）
1.基本徽章
h6 
  |测试标题
  span.badge.badge-secondary NEW
2.各种颜色类型的徽章
.badge-default 默认类
.badge-primary
.badge-secondary
.badge-success
.badge-danger
.badge-warning
.badge-info
.badge-light
.badge-dark
3.药丸形状徽章
span.badge.badge-pill.badge-success  NEW
4.徽章嵌入到按钮内
button.btn.btn-primary(type="button") 
  |Messages
  span.badge.badge-light 8

十.进度条
1.基本用法
.progress
  .progress-bar(style="width:70%")
2.进度条高度
.progress(style="height:10px;")
  .progress-bar(style="width:70%")
3.进度条显示百分比
.progress(style="height:10px;")
  .progress-bar(style="width:70%") 70%
4.不同颜色的进度条
.progress(style="height:10px;")
  .progress-bar.bg-success(style="width:70%") 70%
5.条纹进度条
.progress-bar-striped 类来设置条纹进度条
.progress(style="height:10px;")
  .progress-bar.bg-success.progress-bar-striped(style="width:70%") 70%
6.动画进度条
.progress-bar-animated 类可以为进度条添加动画
.progress(style="height:10px;")
  .progress-bar.bg-success.progress-bar-striped.progress-bar-animated(style="width:70%") 70%
7.混合色彩进度条(在同一个进度条内部水平排列)
.progress(style="height:10px;")
  .progress-bar.bg-success.progress-bar-striped.progress-bar-animated(style="width:40%") 40%
  .progress-bar.bg-danger.progress-bar-striped.progress-bar-animated(style="width:10%") 10%
  .progress-bar.bg-warn.progress-bar-striped.progress-bar-animated(style="width:20%") 20%

十一.分页
1.基本分页
ul.pagination
  li.page-item
    a.page-link(href="#") 1
2.active 类来高亮显示当前页码状态
ul.pagination
  li.page-item
    a.page-link(href="#") 1
  li.page-item.active
    a.page-link(href="#") 2
3.disabled 类可以设置分页链接不可点击
ul.pagination
  li.page-item.disabled
    a.page-link(href="#") 1
  li.page-item.active
    a.page-link(href="#") 2
4.显示不同的分页大小
ul.pagination.pagination-lg
  li.page-item
    a.page-link(href="#") 1
  li.page-item.active
    a.page-link(href="#") 2
ul.pagination.pagination-sm
  li.page-item
    a.page-link(href="#") 1
  li.page-item.active
    a.page-link(href="#") 2
5.面包屑导航
ul.breadcrumb
  li.breadcrumb-item
    a(href="#") Photos
  li.breadcrumb-item
    a(href="#") Photos
  li.breadcrumb-item.active Photos

十二.列表组
1.基础列表组
ul.list-group
  li.list-group-item item
  li.list-group-item item
  li.list-group-item item
2.激活状态下的列表项
ul.list-group
  li.list-group-item.active item
  li.list-group-item item
  li.list-group-item item
3.禁用的列表项
ul.list-group
  li.list-group-item.disabled item
  li.list-group-item item
  li.list-group-item item
4.链接列表项
.list-group
  a.list-group-item.list-group-item-action(href="#") item
  a.list-group-item.list-group-item-action(href="#") item
  a.list-group-item.list-group-item-action(href="#") item
5.多种颜色列表项
ul.list-group
  li.list-group-item.list-group-item-success 列表项目
  li.list-group-item.list-group-item-secondary 列表项目
  li.list-group-item.list-group-item-info 列表项目
  li.list-group-item.list-group-item-warning 列表项目
  li.list-group-item.list-group-item-danger 列表项目
  li.list-group-item.list-group-item-primary 列表项目
  li.list-group-item.list-group-item-dark 列表项目
  li.list-group-item.list-group-item-light 列表项目
6.链接多种颜色列表项
.list-group
  a.list-group-item.list-group-item-success(href="#") 列表项目
  a.list-group-item.list-group-item-secondary(href="#") 列表项目
  a.list-group-item.list-group-item-info(href="#") 列表项目
  a.list-group-item.list-group-item-warning(href="#") 列表项目
  a.list-group-item.list-group-item-danger(href="#") 列表项目
  a.list-group-item.list-group-item-primary(href="#") 列表项目
  a.list-group-item.list-group-item-dark(href="#") 列表项目
  a.list-group-item.list-group-item-light(href="#") 列表项目

十三.卡片
1.基本卡片
.card
  .card-body card-body
2.头部和尾部
.card
  .card-header card-header
  .card-body card-body
  .card-footer card-footer
3.多种颜色卡片
.card
  .card-body Basic card
.card.bg-primary.text-white
  .card-body primary card
.card.bg-success.text-white
  .card-body Success card
.card.bg-info.text-white
  .card-body info card
.card.bg-warning.text-white
  .card-body warning card
.card.bg-danger.text-white
  .card-body danger card
.card.bg-secondary.text-white
  .card-body secondary card
.card.bg-dark.text-dark
  .card-body dark card
4.标题、文本和链接
.card-title 类来设置卡片的标题
.card-text 类用于设置卡片正文的内容 
.card-link 类用于给链接设置颜色
.card
.card-body
  h4.card-title card-title
  p.card-text card-text card-text card-text
  a.card-link(href="#") card-link
  a.card-link(href="#") card-link
5.图片卡片
.card(style="width:400px")
  img.card-img-top(src="../../../static/img/img_avatar.png",style="width:100%")
  .card-body
    h4.card-title John Doe
    p.card-text Some example text some example text. John Doe is an architect and engineer
    a.btn.btn-primary(href="#") See Profile
.card(style="width:400px")
  .card-body
    h4.card-title John Doe
    p.card-text Some example text some example text. John Doe is an architect and engineer
    a.btn.btn-primary(href="#") See Profile
  img.card-img-bottom(src="../../../static/img/img_avatar.png",style="width:100%")

十四.下拉菜单
1.按钮下来菜单
.dropdown
  button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Dropdown button
  .dropdown-menu
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
2.下拉菜单中的分割线
.dropdown
  button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Dropdown button
  .dropdown-menu
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
    .dropdown-divider
    a.dropdown-item(href="#") dropdown-divider
3.dropdown-header 类用于在下拉菜单中添加标题
.dropdown
  button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Dropdown button
  .dropdown-menu
    .dropdown-header dropdown-header
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
    a.dropdown-item(href="#") link
    .dropdown-header dropdown-header
    a.dropdown-item(href="#") dropdown-divider
4.下拉菜单中的可用项与禁用项
.dropdown
  button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Dropdown button
  .dropdown-menu
    a.dropdown-item(href="#") link
    a.dropdown-item.active(href="#") link
    a.dropdown-item.disabled(href="#") link
5.菜单对齐
左对齐：可以在元素上的 .dropdown-menu 类后添加 .dropdown-menu-left 类
右对齐：可以在元素上的 .dropdown-menu 类后添加 .dropdown-menu-right 类
6..dropup类下拉菜单向上弹出
.dropup
  button.btn.btn-primary.dropdown-toggle(type="button",data-toggle="dropdown") Dropdown button
  .dropdown-menu.dropdown-menu-right
    a.dropdown-item(href="#") link
    a.dropdown-item.active(href="#") link
    a.dropdown-item.disabled(href="#") link
7.按钮中设置下拉菜单
.btn-group
  button.btn.btn-primary(type="button") Sony
  button.btn.btn-primary.dropdown-toggle.dropdown-toggle-split(data-toggle="dropdown")
    span.caret
  .dropdown-menu
    a.dropdown-item(href="#") Tablet
    a.dropdown-item(href="#") Tablet

十五.折叠
1.简单折叠
<a> 元素上你可以使用 href 属性来代替 data-target 属性
button.btn.btn-primary(type="button" , data-toggle="collapse" , data-target="#demo") 简单折叠
  .collapse(id="demo") Lorem ipsum dolor sit amet, consectetur adipisicing elit,
    |sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
    |Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris 
    |nisi ut aliquip ex ea commodo consequat.
2.show 类让折叠内容默认显示
button.btn.btn-primary(type="button" , data-toggle="collapse" , data-target="#demo") 简单折叠
  .collapse.show(id="demo") Lorem ipsum dolor sit amet, consectetur adipisicing elit,
    |sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
    |Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris 
    |nisi ut aliquip ex ea commodo consequat.
3.扩展卡片组件来显示简单的手风琴
使用 data-parent 属性来确保所有的折叠元素在指定的父元素下
#accordion
  .card
    .card-header
      a.card-link(data-toggle="collapse" , href="#collapseOne") 选项一
    #collapseOne.collapse.show(data-parent="#accordion")
      .card-body #1 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！
  .card
    .card-header
      a.card-link(data-toggle="collapse" , href="#collapseTwo") 选项二
    #collapseTwo.collapse(data-parent="#accordion")
      .card-body #2 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！
  .card
    .card-header
      a.card-link(data-toggle="collapse" , href="#collapseThree") 选项一
    #collapseThree.collapse(data-parent="#accordion")
      .card-body #3 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！
十六.导航
1.简单水平导航
ul.nav
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
2.导航对齐
.justify-content-center 类设置导航居中显示
.justify-content-end 类设置导航右对齐
ul.nav
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled

ul.nav.justify-content-center
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled

ul.nav.justify-content-end
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
3.flex-column类实现垂直导航
.col-8
  ul.nav.flex-column
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link.disabled(href="#") disabled
4.nav-tabs 类可以将导航转化为选项卡
ul.nav.nav-tabs
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.active(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
5.nav-pills 类可以将导航项设置成胶囊形状 胶囊导航 
ul.nav.nav-pills
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.active(href="#") Link
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
6.导航等宽
.nav-justified 类可以设置导航项齐行等宽显示。
ul.nav.nav-pills.nav-justified
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.active(href="#") Link1111
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
7.胶囊下拉菜单
ul.nav.nav-pills
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.active(href="#") Link1111
  li.nav-item.dropdown
    a.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
    .dropdown-menu
      a.dropdown-item(href="#") Link
      a.dropdown-item(href="#") Link
      a.dropdown-item(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
8.选项卡下拉菜单
ul.nav.nav-tabs
  li.nav-item
    a.nav-link(href="#") Link
  li.nav-item
    a.nav-link.active(href="#") Link1111
  li.nav-item.dropdown
    a.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
    .dropdown-menu
      a.dropdown-item(href="#") Link
      a.dropdown-item(href="#") Link
      a.dropdown-item(href="#") Link
  li.nav-item
    a.nav-link.disabled(href="#") disabled
9.动态选项卡切换
ul.nav.nav-tabs
  li.nav-item
    a.nav-link.active(data-toggle="tab",href="#home") HOME
  li.nav-item
    a.nav-link(data-toggle="tab",href="#menu1") Link
  li.nav-item
    a.nav-link(data-toggle="tab",href="#menu2") Link
.tab-content
  #home.container.tab-pane.active
    h3 HOME
    p Lorem ipsum dolor sit amet
  #menu1.container.tab-pane.fade
    h3 Menu1
    p Lorem ipsum dolor sit amet
  #menu2.container.tab-pane.fade
    h3 Menu2
    p Lorem ipsum dolor sit amet
10.胶囊状动态选项卡切换
ul.nav.nav-pills
  li.nav-item
    a.nav-link.active(data-toggle="tab",href="#home") HOME
  li.nav-item
    a.nav-link(data-toggle="tab",href="#menu1") Link
  li.nav-item
    a.nav-link(data-toggle="tab",href="#menu2") Link
.tab-content
  #home.container.tab-pane.active
    h3 HOME
    p Lorem ipsum dolor sit amet
  #menu1.container.tab-pane.fade
    h3 Menu1
    p Lorem ipsum dolor sit amet
  #menu2.container.tab-pane.fade
    h3 Menu2
    p Lorem ipsum dolor sit amet

十七.导航栏
1.基本导航
.navbar类加在标准的导航栏上
后面紧跟: .navbar-expand-xl|lg|md|sm 类来创建响应式的导航栏 (大屏幕水平铺开，小屏幕垂直堆叠)。
<ul> 添加 class="navbar-nav" 类
<li> 元素上添加 .nav-item 类
<a> 元素上使用 .nav-link 类

.navbar.navbar-expand-md.bg-light
  ul.navbar-nav
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link

2.垂直导航栏
通过删除 .navbar-expand-xl|lg|md|sm 类来创建垂直导航栏:
.navbar.bg-light
  ul.navbar-nav
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link

3.不同颜色导航栏
加入.bg-light.navbar-light
.active 类来高亮显示选中的选项
.disabled 类用于设置该链接是不可点击的
.navbar.bg-light.navbar-light
  ul.navbar-nav
    li.nav-item.active
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link

.navbar.bg-dark.navbar-dark
  ul.navbar-nav
    li.nav-item.active
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link

4.品牌/Logo
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") LOGO
  ul.navbar-nav
    li.nav-item.active
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
5.导航logo使用图片
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  ul.navbar-nav
    li.nav-item.active
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
    li.nav-item
      a.nav-link(href="#") Link
6.折叠导航栏
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link

8.导航栏使用下拉菜单
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item.dropdown
        a#navbardrop.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
        .dropdown-menu
          a.dropdown-item(href="#") Link1
          a.dropdown-item(href="#") Link2
          a.dropdown-item(href="#") Link3

9.导航栏的表单与按钮
<form> 元素使用 class="form-inline" 类来排版输入框与按钮
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  form.form-inline
    input.form-control(type="text",placeholder="Search")
    button.btn.btn-success(type="button") Search
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item.dropdown
        a#navbardrop.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
        .dropdown-menu
          a.dropdown-item(href="#") Link1
          a.dropdown-item(href="#") Link2
          a.dropdown-item(href="#") Link3
10.输入框前添加小标签
.input-group-addon 类用于在输入框前添加小标签
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  form.form-inline
    .input-group
      .input-group-addo @
      input.form-control(type="text",placeholder="Search")
      button.btn.btn-success(type="button") Search
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item.dropdown
        a#navbardrop.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
        .dropdown-menu
          a.dropdown-item(href="#") Link1
          a.dropdown-item(href="#") Link2
          a.dropdown-item(href="#") Link3

11.导航栏文本
.navbar-text 类来设置导航栏上非链接文本
nav.navbar.navbar-expand-md.bg-dark.navbar-dark
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  form.form-inline
    .input-group
      .input-group-addo @
      input.form-control(type="text",placeholder="Search")
      button.btn.btn-success(type="button") Search
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item.dropdown
        a#navbardrop.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
        .dropdown-menu
          a.dropdown-item(href="#") Link1
          a.dropdown-item(href="#") Link2
          a.dropdown-item(href="#") Link3
    span.navbar-text navbar-text

12.固定导航栏
.fixed-top 类用于设置导航栏固定在顶部
.fixed-bottom 类用于设置导航栏固定在底部
nav.navbar.navbar-expand-md.bg-dark.navbar-dark.fixed-top
  a.navbar-brand(href="#") 
    img(src="../../../static/img/img_avatar.png",alt="logo",style="width:40px;")
  button.navbar-toggler(type="button",data-toggle="collapse",data-target="#collapsibleNavbar")
    span.navbar-toggler-icon
  form.form-inline
    .input-group
      .input-group-addo @
      input.form-control(type="text",placeholder="Search")
      button.btn.btn-success(type="button") Search
  #collapsibleNavbar.collapse.navbar-collapse
    ul.navbar-nav
      li.nav-item.active
        a.nav-link(href="#") Link
      li.nav-item
        a.nav-link(href="#") Link
      li.nav-item.dropdown
        a#navbardrop.nav-link.dropdown-toggle(href="#",data-toggle="dropdown") Link
        .dropdown-menu
          a.dropdown-item(href="#") Link1
          a.dropdown-item(href="#") Link2
          a.dropdown-item(href="#") Link3
    span.navbar-text navbar-text

十八.表单
1.基本表单
表单元素 <input>, <textarea>, 和 <select> elements 在使用 .form-control 类的情况下，宽度都是设置为 100%
2.堆叠表单
form
.form-group
  label(for="email") Email:
  input.form-control(type="email",id="email",placeholder="Enter email")
.form-group
  label(for="pwd") Password:
  input.form-control(type="password",id="pwd",placeholder="Enter password")
.form-check
  label.form-check-label
    input.form-check-input(type="checkbox") 
    |Remember me
button.btn.btn-primary(type="submit") Submit
3.内联表单
在屏幕宽度小于 576px 时为垂直堆叠，如果屏幕宽度大于等于576px时表单元素才会显示在同一个水平线上
<form> 元素上添加 .form-inline类
form.form-inline
.form-group
  label(for="email") Email:
  input.form-control(type="email",id="email",placeholder="Enter email")
.form-group
  label(for="pwd") Password:
  input.form-control(type="password",id="pwd",placeholder="Enter password")
.form-check
  label.form-check-label
    input.form-check-input(type="checkbox") 
    |Remember me
button.btn.btn-primary(type="submit") Submit
十九.表单控件
1.Input类
form
  .form-group
    label(for="usr") 用户名:
    input.form-control(type="text",id="usr")
  .form-group
    label(for="pwd") 密码:
    input.form-control(type="password",id="pwd")

2.textarea类
form
  .form-group
    label(for="comment") 评论:
    textarea.form-control(rows="5",id="comment")

3.复选框(checkbox)
form
  .form-check
    label.form-check-label
      input.form-check-input(type="checkbox",value="")
      |Option 1
  .form-check
    label.form-check-label
      input.form-check-input(type="checkbox",value="")
      |Option 2
  .form-check
    label.form-check-label.disabled
      input.form-check-input(type="checkbox",value="",disabled)
      |Option 3

4.复选框(checkbox) 使用 .form-check-inline 类可以让选项显示在同一行上
form
  .form-check.form-check-inline
    label.form-check-label
      input.form-check-input(type="checkbox",value="")
      |Option 1
  .form-check.form-check-inline
    label.form-check-label
      input.form-check-input(type="checkbox",value="")
      |Option 2
  .form-check.form-check-inline
    label.form-check-label.disabled
      input.form-check-input(type="checkbox",value="",disabled)
      |Option 3

5.单选框(Radio)
form
  .radio
    label
      input(type="radio",name="optradio") 
      |Option 1
  .radio
    label
      input(type="radio",name="optradio") 
      |Option 1
  .radio.disabled
    label
      input(type="radio",name="optradio",disabled) 
      |Option 1

6.单选框(Radio).radio-inline 类可以让选项显示在同一行上
form
  label.radio-inline
    input(type="radio",name="optradio") 
    |Option 1
  label.radio-inline
    input(type="radio",name="optradio") 
    |Option 1
  label.radio-inline
    input(type="radio",name="optradio",disabled) 
    |Option 1

8. select 下拉菜单
form
  .form-group
    label(for="sel1") 单选下拉菜单:
    select.form-control(id="sel1")
      option 1
      option 2
      option 3
      option 4
  .form-group
    label(for="sel2") 多选下拉菜单(按住 shift 键，可以选取多个选项):
    select.form-control(multiple,id="sel2")
      option 1
      option 2
      option 3
      option 4

二十.输入框组
1.基本输入框组
.input-group 类来向表单输入框中添加更多的样式，如图标、文本或者按钮
.input-group-prepend 类添加在前面
.input-group-append 添加在后面
.input-group-text 类来设置文本的样式
form
  .input-group.mb-3
    .input-group-prepend
      span.input-group-text @
    input.form-control(type="text",placeholder="Username",id="usr",name="username")
  .input-group.mb-3
    input.form-control(type="text",placeholder="Your Email",id="mail",name="email")
    .input-group-append
      span.input-group-text @runoob.com
    
  button.btn.btn-primary(type="submit") Submit

2.输入框大小
使用 .input-group-sm 类来设置小的输入框， .input-group-lg 类设置大的输入框：
form
  .input-group.mb-3.input-group-sm
    .input-group-prepend
      span.input-group-text Small
    input.form-control(type="text",placeholder="Username",id="usr",name="username")
  .input-group.mb-3
    .input-group-prepend
      span.input-group-text Default
    input.form-control(type="text",placeholder="Username",id="usr",name="username")
  .input-group.mb-3.input-group-lg
    .input-group-prepend
      span.input-group-text input-group-lg
    input.form-control(type="text",placeholder="Username",id="usr",name="username")
  button.btn.btn-primary(type="submit") Submit

3.多个输入框和文本
form
.input-group.mb-3
  .input-group-prepend
    span.input-group-text Person
  input.form-control(type="text",placeholder="First Name")
  input.form-control(type="text",placeholder="Last Name")

.input-group.mb-3
  .input-group-prepend
    span.input-group-text Person
    span.input-group-text Person
    span.input-group-text Person
  input.form-control(type="text",placeholder="First Name")

4.复选框与单选框
form
.input-group.mb-3
  .input-group-prepend
    .input-group-text
      input(type="checkbox")
  input.form-control(type="text",placeholder="First Name")

.input-group.mb-3
  .input-group-prepend
    .input-group-text
      input(type="radio")
  input.form-control(type="text",placeholder="First Name")

5.输入框添加按钮组
form
  .input-group.mb-3
    .input-group-prepend
      button.btn.btn-outline-secondary(type="button") Basic Button
    input.form-control(type="text",placeholder="First Name")
  
  .input-group.mb-3
    input.form-control(type="text",placeholder="Search")
    .input-group-append
      button.btn.btn-success(type="submit") GO

  .input-group.mb-3
    input.form-control(type="text",placeholder="Search")
    .input-group-append
      button.btn.btn-primary(type="button") OK
      button.btn.btn-danger(type="button") Cancel

6.设置下拉菜单
form
  .input-group.mt-3.mb-3
    .input-group-prepend
      button.btn.btn-outline-secondary.dropdown-toggle(data-toggle="dropdown") 选择网站
      .dropdown-menu
        a.dropdown-item(href="#") GOOGLE
        a.dropdown-item(href="#") GOOGLE
        a.dropdown-item(href="#") GOOGLE
    input.form-control(type="text",placeholder="网站地址")

7.输入框组标签
form
  .input-group.mt-3.mb-3
    input.form-control(type="text",placeholder="Email",id="demo",name="email")
    .input-group-append
      span.input-group-text @runoob.com

二十一.自定义表单
1.自定义复选框
父类为 .custom-control 和 .custom-radio
复选框类 .custom-control-input
label类：.custom-control-label 类，label 的 for 属性值需要匹配复选框的 id
form
  .custom-control.custom-checkbox.mb-3
    input.custom-control-input(type="checkbox",id="customCheck",name="example1")
    label.custom-control-label(for="customCheck") 自定义复选框
  input(type="checkbox",id="defaultCheck",name="example2")
  label(for="defaultCheck") 默认复选框
  br
  button.btn.btn-primary(type="submit") 提交

2.自定义单选框
form
  .custom-control.custom-radio
    input.custom-control-input(type="radio",id="customRadio",name="example1")
    label.custom-control-label(for="customRadio") 自定义单选框

  input(type="radio",id="defaultRadio",name="example2")
  label(for="defaultRadio") 默认单选框

  br
  button.btn.btn-primary(type="submit") 提交

3.自定义控件显示在同一行
.custom-control-inline 类来包裹自定义表单控件，这样自定义表单控件就能显示在同一行
form
  .custom-control.custom-radio.custom-control-inline
    input.custom-control-input(type="radio",id="customRadio",name="example1")
    label.custom-control-label(for="customRadio") 自定义单选框1

  .custom-control.custom-radio.custom-control-inline
    input.custom-control-input(type="radio",id="customRadio",name="example1")
    label.custom-control-label(for="customRadio") 自定义单选框2

  br
  button.btn.btn-primary(type="submit") 提交

4.自定义选择菜单
自定义选择菜单可以在 <select> 元素上添加 .custom-select 类:
 .custom-select-sm、.custom-select-lg 来设置它们的大小:
select.custom-select
  option(selected) 自定义选择菜单
  option(value="Google") Google
  option(value="Google") Google
  option(value="Google") Google

5.自定义滑块控件(4.1以上版本才可见)
type="range" 的输入框中添加 .custom-range 类来设置自定义滑块控件
label(for="customRange") 自定义滑块控件
  input.custom-range(type="range",id="customRange",name="points1")

  label(for="defaultRange") 默认滑块控件
  input(type="range",id="defaultRange",name="points2")

  p
    button.btn.btn-primary(type="submit") 提交

6.自定义文件上传控件
父元素添加 .custom-file 类，
然后在 input 设置为 type="file" 并添加 .custom-file-input:
label标签使用 .custom-file-label 类

.custom-file.mb-3
    input.custom-file-input(type="file",id="customFile",name="filename")
    label.custom-file-label(for="customFile") 选择文件

  input(type="file",id="myFile",name="myFile")
  .mt-3
  button.btn.btn-primary(type="submit") 提交

二十二.轮播
1.基本轮播效果
.carousel-inner img {
  width: 100%;
  height: 100%;
}
#demo.carousel.slide(data-ride="carousel")
  ul.carousel-indicators
    li.active(data-target="#demo",data-slide-to="0")
    li(data-target="#demo",data-slide-to="1")
    li(data-target="#demo" data-slide-to="2")
  .carousel-inner
    .carousel-item.active
      img(src="../../../static/img/img_fjords_wide.jpg")
    .carousel-item
      img(src="../../../static/img/img_nature_wide.jpg")
    .carousel-item
      img(src="../../../static/img/img_mountains_wide.jpg")
  a.carousel-control-prev(href="#demo",data-slide="prev")
    span.carousel-control-prev-icon
  a.carousel-control-next(href="#demo",data-slide="next")
    span.carousel-control-next-icon

2.轮播图片上添加描述
在每个 <div class="carousel-item"> 内添加 <div class="carousel-caption"> 来设置轮播图片的描述文本
 #demo.carousel.slide(data-ride="carousel")
  ul.carousel-indicators
    li.active(data-target="#demo",data-slide-to="0")
    li(data-target="#demo",data-slide-to="1")
    li(data-target="#demo" data-slide-to="2")
  .carousel-inner
    .carousel-item.active
      img(src="../../../static/img/img_fjords_wide.jpg")
      .carousel-caption
        h3 第一张图片描述标题
        p 描述文字
    .carousel-item
      img(src="../../../static/img/img_nature_wide.jpg")
      .carousel-caption
        h3 第二张图片描述标题
        p 描述文字
    .carousel-item
      img(src="../../../static/img/img_mountains_wide.jpg")
      .carousel-caption
        h3 第三张图片描述标题
        p 描述文字
  a.carousel-control-prev(href="#demo",data-slide="prev")
    span.carousel-control-prev-icon
  a.carousel-control-next(href="#demo",data-slide="next")
    span.carousel-control-next-icon

二十三.模态框
1.简单的模态框效果
button.btn.btn-primary(data-toggle="modal",data-target="#myModal") 打开模态框
  .modal.fade(id="myModal")
    .modal-dialog
      .modal-content
        .modal-header
          h4.modal-title 模态框头部
          button.close(type="button",data-dismiss="modal") &times;
        .modal-body
          |模态框内容..
        .modal-footer
          button.btn.btn-secondary(type="button",data-dismiss="modal") 关闭

2.模态框尺寸
button.btn.btn-primary(data-toggle="modal",data-target="#myModal") 打开模态框
  .modal.fade(id="myModal")
    .modal-dialog.modal-lg
      .modal-content
        .modal-header
          h4.modal-title 模态框头部
          button.close(type="button",data-dismiss="modal") &times;
        .modal-body
          |模态框内容..
        .modal-footer
          button.btn.btn-secondary(type="button",data-dismiss="modal") 关闭
二十四.提示框
import 'bootstrap/dist/js/bootstrap.bundle.min.js'; //默认已经引入popper.js
1.创建提示框
通过向元素添加 data-toggle="tooltip" 来来创建提示框
bootstrap.bundle.min.js 文件，这个文件里其实已经预先编译了 Popper.js 进去

a(href="#",data-toggle="tooltip",title="我是提示内容!") 鼠标移动到我这

<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]')["tooltip"]();   
});
</script>

或者
ngAfterViewInit(){
  $(document).ready(function(){
    $('[data-toggle="tooltip"]')["tooltip"]();   
    $('[data-toggle="popover"]')["popover"]();
  });
}

2.指定提示框的位置
a(href="#",data-toggle="tooltip",data-placement="top",title="我是提示内容!") 鼠标移动到我这
a(href="#",data-toggle="tooltip",data-placement="bottom",title="我是提示内容!") 鼠标移动到我这
a(href="#",data-toggle="tooltip",data-placement="left",title="我是提示内容!") 鼠标移动到我这
a(href="#",data-toggle="tooltip",data-placement="right",title="我是提示内容!") 鼠标移动到我这

二十五.弹出框
1.基本弹出框
a(href="#",data-toggle="popover",title="弹出框标题",data-content="弹出框内容") 多次点我

$(document).ready(function(){
  $('[data-toggle="popover"]')["popover"]();
});

2.指定弹出框的位置
a(href="#",title="Header",data-toggle="popover",data-placement="top",data-content="Content") 点我
a(href="#",title="Header",data-toggle="popover",data-placement="bottom",data-content="Content") 点我
a(href="#",title="Header",data-toggle="popover",data-placement="left",data-content="Content") 点我
a(href="#",title="Header",data-toggle="popover",data-placement="right",data-content="Content") 点我

3.关闭弹出框
使用 data-trigger="focus" 属性来设置在鼠标点击元素外部区域来关闭弹出框
a(href="#",title="Header",data-toggle="popover",data-trigger="focus",data-placement="top",data-content="Content") 点我

鼠标移动到元素上显示，移除后消失的效果，可以使用 data-trigger 属性，并设置值为 "hover":
a(href="#",title="Header",data-toggle="popover",data-trigger="hover",data-placement="top",data-content="Content") 点我

二十六.滚动监听(Scrollspy)
1.水平导航滚动监听
需要body上添加，其他标签滚动监听无效
body设置position: relative; 
<body data-spy="scroll" data-target=".navbar" data-offset="200">
nav.navbar.navbar-expand-sm.bg-dark.navbar-dark.fixed-top
  ul.navbar-nav
    li.nav-item
      a.nav-link(href="#section1") Section 1
    li.nav-item
      a.nav-link(href="#section2") Section 2
    li.nav-item
      a.nav-link(href="#section3") Section 3
    li.nav-item.dropdown
      a.nav-link.dropdown-toggle(href="#",id="navbardrop",data-toggle="dropdown") Section 4
      .dropdown-menu 
        a.dropdown-item(href="#section41") section41
        a.dropdown-item(href="#section42") section42

.container-fluid.bg-success(id="section1",style="padding-top:70px;padding-bottom:70px")
  h1 Section 1
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!

.container-fluid.bg-warning(id="section2",style="padding-top:70px;padding-bottom:70px")
  h1 Section 2
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!

.container-fluid.bg-secondary(id="section3",style="padding-top:70px;padding-bottom:70px")
  h1 Section 3
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!

.container-fluid.bg-danger(id="section41",style="padding-top:70px;padding-bottom:70px")
  h1 Section 41
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!

.container-fluid.bg-info(id="section42",style="padding-top:70px;padding-bottom:70px")
  h1 Section 42
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!
  p Try to scroll this section and look at the navigation bar while scrolling! Try to scroll this section and look at the navigation bar while scrolling!

2.垂直滚动监听
需要body上添加，其他标签滚动监听无效
body设置position: relative; 
<body data-spy="scroll" data-target="#myScrollspy" data-offset="200">
nav#myScrollspy.col-sm-3.col-4
  ul.nav.nav-pills.flex-column
    li.nav-item
      a.nav-link.active(href="#section1") Section 1
    li.nav-item
      a.nav-link(href="#section2") Section 2
    li.nav-item
      a.nav-link(href="#section3") Section 3
    li.nav-item.dropdown
      a.nav-link.dropdown-toggle(data-toggle="dropdown",href="#") Section 4
      .dropdown-menu
        a.dropdown-item(href="#section41") section41
        a.dropdown-item(href="#section42") section42


.col-sm-9.col-8
  #section1.bg-success
    h1 Section 1
    p Try to scroll this section and look at the navigation list while scrolling!
  #section2.bg-success
    h1 Section 2
    p Try to scroll this section and look at the navigation list while scrolling!
  #section3.bg-success
    h1 Section 3
    p Try to scroll this section and look at the navigation list while scrolling!
  #section41.bg-success
    h1 Section 41
    p Try to scroll this section and look at the navigation list while scrolling!
  #section42.bg-success
    h1 Section 42
    p Try to scroll this section and look at the navigation list while scrolling!

二十七.小工具
1.边框：使用 border 类可以添加或移除边框
span.border
span.border.border-top-0
span.border.border-right-0
span.border.border-bottom-0
span.border.border-left-0

2.边框颜色
span.border.border-primary
span.border.border-secondary
span.border.border-success
span.border.border-danger
span.border.border-warning
span.border.border-light
span.border.border-dark
span.border.border-white

3.边框圆角设置
使用rounded 类可以添加圆角边框
span.rounded
span.rounded-top
span.rounded-right
span.rounded-bottom
span.rounded-left
span.rounded-circle
span.rounded-0

4.浮动
.float-right 类用于设置元素右浮动
.float-left 设置元素左浮动
.clearfix 类用于清除浮动

.clearfix
  span.float-left 左浮动
  span.float-right 右浮动

5.响应式浮动
.float-sm-right 在大于小屏幕尺寸上右浮动
.float-md-right 在大于中等屏幕尺寸上右浮动
.float-lg-right 在大于大屏幕尺寸上右浮动
.float-xl-right 在大于超大屏幕尺寸上右浮动
.float-none 没有浮动

6.居中对齐
.mx-auto.bg-warning(style="width:150px") 居中显示

7.宽度
.w-25.bg-warning 宽度 25%
.w-50.bg-warning 宽度 50%
.w-75.bg-warning 宽度 75%
.w-100.bg-warning 宽度 100%
.mw-100.bg-warning 最大宽度 100%

8.高度
.h-25.d-inline-block.p-2.bg-warning 高度 25%
.h-50.d-inline-block.p-2.bg-warning 高度 50%
.h-75.d-inline-block.p-2.bg-warning 高度 75%
.h-100.d-inline-block.p-2.bg-warning 高度 100%
.mh-100.d-inline-block.p-2.bg-warning(style="height:500px") 最大高度 100%


二十八.Flex（弹性）布局
1.弹性盒子(flexbox)
使用 d-flex 类创建一个弹性盒子容器，并设置三个弹性子元素
.d-flex.p-3.bg-secondary.text-white 
  .p-2.bg-info Flex item 1
  .p-2.bg-warning Flex item 2
  .p-2.bg-primary Flex item 3

2.创建显示在同一行上的弹性盒子容器可以使用 d-inline-flex 类:
.d-inline-flex.p-3.bg-secondary.text-white 
  .p-2.bg-info Flex item 1
  .p-2.bg-warning Flex item 2
  .p-2.bg-primary Flex item 3

3.flex-row 可以设置弹性子元素水平显示，这是默认的。
使用 .flex-row-reverse 类用于设置右对齐显示，即与 .flex-row 方向相反。
.d-inline-flex.flex-row-reverse.p-3.bg-secondary.text-white 
  .p-2.bg-info Flex item 1
  .p-2.bg-warning Flex item 2
  .p-2.bg-primary Flex item 3

4.flex-column 类用于设置弹性子元素垂直方向显示, .flex-column-reverse 用于翻转子元素：
.d-flex.flex-column.p-3.bg-secondary.text-white 
  .p-2.bg-info Flex item 1
  .p-2.bg-warning Flex item 2
  .p-2.bg-primary Flex item 3

.d-flex.flex-column-reverse.p-3.bg-secondary.text-white 
  .p-2.bg-info Flex item 1
  .p-2.bg-warning Flex item 2
  .p-2.bg-primary Flex item 3

5.内容排列
start (默认), end, center, between 或 around:
.d-flex.justify-content-start.p-3.bg-secondary.text-white 
.p-2.bg-info Flex start 1
.p-2.bg-warning Flex start 2
.p-2.bg-primary Flex start 3

.d-flex.justify-content-end.p-3.bg-secondary.text-white 
.p-2.bg-info Flex end 1
.p-2.bg-warning Flex end 2
.p-2.bg-primary Flex end 3

.d-flex.justify-content-center.p-3.bg-secondary.text-white 
.p-2.bg-info Flex center 1
.p-2.bg-warning Flex center 2
.p-2.bg-primary Flex center 3

.d-flex.justify-content-between.p-3.bg-secondary.text-white 
.p-2.bg-info Flex between 1
.p-2.bg-warning Flex between 2
.p-2.bg-primary Flex between 3

.d-flex.justify-content-around.p-3.bg-secondary.text-white 
.p-2.bg-info Flex around 1
.p-2.bg-warning Flex around 2
.p-2.bg-primary Flex around 3

6.等宽.flex-fill 类强制设置各个弹性子元素的宽度是一样的
.d-flex.p-3.bg-secondary.text-white 
  .p-2.flex-fill.bg-info flex-fill 1
  .p-2.flex-fill.bg-warning flex-fill 2
  .p-2.flex-fill.bg-primary flex-fill 3

7.flex-grow-1 用于设置子元素使用剩下的空间
使用 .flex-shrink-1 用于设置子元素的收缩规则
.d-flex.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.flex-grow-1.bg-primary flex-fill 3

8.排序
.order 类可以设置弹性子元素的排序，从 .order-1 到 .order-12，数字越低权重越高( .order-1 排在 .order-2 之前) :
.d-flex.p-3.bg-secondary.text-white 
  .p-2.order-3.bg-info flex-fill 1 
  .p-2.order-2.bg-warning flex-fill 2
  .p-2.order-1.bg-primary flex-fill 3

9.外边距
.mr-auto 类可以设置子元素右外边距为 auto
.ml-auto 类可以设置子元素左外边距为 auto
.d-flex.p-3.bg-secondary.text-white 
  .p-2.mr-auto.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.ml-auto.bg-primary flex-fill 3

10.包裹
弹性容器中包裹子元素可以使用以下三个类： .flex-nowrap (默认), .flex-wrap 或 .flex-wrap-reverse。设置 flex 容器是单行或者多行。
d-flex.flex-wrap.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.flex-nowrap.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.flex-wrap-reverse.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

11.内容对齐
垂直方向上如何去堆叠子元素，包含的值有：
.align-content-start (默认), 
.align-content-end, 
.align-content-center, 
.align-content-between, 
.align-content-around,
.align-content-stretch

.d-flex.align-content-start.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.align-content-end.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.align-content-center.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.align-content-around.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

.d-flex.align-content-stretch.p-3.bg-secondary.text-white 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

12.子元素对齐
设置单行的子元素对齐可以使用 .align-items-* 类来控制，包含的值有：
.align-items-start, 
.align-items-end, 
.align-items-center, 
.align-items-baseline, 
.align-items-stretch (默认)。

.d-flex.align-items-start.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

br

.d-flex.align-items-end.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

br

.d-flex.align-items-center.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

br

.d-flex.align-items-baseline.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

br

.d-flex.align-items-stretch.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

13.指定子元素对齐
如果要设置指定子元素对齐对齐可以使用 .align-self-* 类来控制，
.align-self-start, 
.align-self-end, 
.align-self-center, 
.align-self-baseline, 
.align-self-stretch (默认)

.d-flex.p-3.bg-secondary.text-white(style="height:300px") 
  .p-2.bg-info flex-fill 1 
  .p-2.align-self-center.bg-warning flex-fill 2
  .p-2.bg-primary flex-fill 3

14.响应式 flex 类

二十九.多媒体对象
1.基础多媒体对象
.media.border.p-3
  img.mr-3.mt-3.rounded-circle(style="width:60px;",src="../../../static/img/img_avatar.png",alt="John Doe")
  .media-body
    h4 菜鸟教程
    p 学的不仅是技术，更是梦想！！

2.多媒体对象嵌套
.media.border.p-3
  img.mr-3.mt-3.rounded-circle(style="width:60px;",src="../../../static/img/img_avatar.png",alt="John Doe")
  .media-body
    h4 菜鸟教程
    p 学的不仅是技术，更是梦想！！
    .media.p-3
      img.mr-3.mt-3.rounded-circle(style="width:60px;",src="../../../static/img/img_avatar.png",alt="John Doe")
      .media-body
        h4 菜鸟教程
        p 学的不仅是技术，更是梦想！！

3.多媒体对象图片显示在右边
.media.border.p-3
  .media-body
    h4 菜鸟教程
    p 学的不仅是技术，更是梦想！！！
  img.mr-3.mt-3.rounded-circle(style="width:60px;",src="../../../static/img/img_avatar.png",alt="John Doe")

4.定位多媒体图片位置
使用 align-self-* 相关类来设置多媒体对象的图片显示位置
.media.border.mt-3
  img.mr-3.rounded-circle.align-self-center(style="width:60px;",src="../../../static/img/img_avatar.png",alt="John Doe")
  .media-body
    h4 菜鸟教程
    p 学的不仅是技术，更是梦想！！！

三十.font-awesome图标字体库
1.bootstrap4已经移除了 收费图标，取而代之建议使用其他的
Font Awesome 为Bootstrap而设计的图标 可以商用且免费
官方网站：http://www.fontawesome.com.cn/
图标参考网站：https://www.flaticon.com/packs
2.安装
cnpm install font-awesome -S
3.基本用法
i.fa.fa-camera-retro
4.为了增加图标大小相对于它们的容器, 使用 fa-lg (33% 递增), fa-2x, fa-3x, fa-4x, 或 fa-5x classes.
i.fa.fa-camera-retro.fa-lg fa-lg
i.fa.fa-camera-retro.fa-2x fa-2x
i.fa.fa-camera-retro.fa-3x fa-3x
i.fa.fa-camera-retro.fa-4x fa-4x
i.fa.fa-camera-retro.fa-5x fa-5x
4.使用 fa-fw 来设置图标在一个固定宽度内
.list-group
  a.list-group-item
    i.fa.fa-home.fa-fw(aria-hidden="true") 
    |&nbsp; 首页
  a.list-group-item
    i.fa.fa-book.fa-fw(aria-hidden="true") 
    |&nbsp; 关于我们
  a.list-group-item
    i.fa.fa-pencil.fa-fw(aria-hidden="true") 
    |&nbsp; 后台应用编辑
  a.list-group-item
    i.fa.fa-cog.fa-fw(aria-hidden="true") 
    |&nbsp; 系统设置
5.使用 fa-ul and fa-li 轻松的替换无序列表中的默认图标
ul.fa-ul
  li 
    i.fa-li.fa.fa-check-square 
    |使用列表类图标
  li 
    i.fa-li.fa.fa-check-square 
    |轻松的替换
  li 
    i.fa-li.fa.fa-spinner.fa-spin
    |无序列表
  li 
    i.fa-li.fa.fa-square
    |中的默认图标

6.使用 fa-border 和 fa-pull-right 或 fa-pull-left 可以轻易构造出引用的特殊效果
i.fa.fa-quote-left.fa-3x.fa-pull-left.fa-border(aria-hidden="true")
  div ...独坐在路边街角 冷风吹醒，默默地伴着我的孤影，只想将结他紧抱，诉出辛酸，就在这刻想起往事，心中一股冲劲勇闯，抛开那现实没有顾虑，仿佛身边拥有一切，看似与别人筑起隔膜。
7.使用 fa-spin 使任意图标旋转，还可以使用 fa-pulse 使其进行8方位旋转。尤其适合 fa-spinner, fa-refresh, 和 fa-cog。
i.fa.fa-spinner.fa-spin.fa-3x.fa-fw
i.fa.fa-circle-o-notch.fa-spin.fa-3x.fa-fw
i.fa.fa-refresh.fa-spin.fa-3x.fa-fw
i.fa.fa-cog.fa-spin.fa-3x.fa-fw
i.fa.fa-spinner.fa-pulse.fa-3x.fa-fw
8.若要对图标进行任意旋转和翻转, 可以使用 fa-rotate-* and fa-flip-* 类.
i.fa.fa-shield 
|normal
i.fa.fa-shield.fa-rotate-90 
|fa-rotate-90
i.fa.fa-shield.fa-rotate-180 
|fa-rotate-180
i.fa.fa-shield.fa-rotate-270 
|fa-rotate-270
i.fa.fa-shield.fa-flip-horizontal 
|fa-flip-horizontal
i.fa.fa-shield.fa-flip-vertical 
|fa-flip-vertical
9.如果想要将多个图标组合起来，使用fa-stack类，作为父容器，
fa-stack-1x作为正常比例的图标，fa-stack-2x作为大一些的图标。
还可以使用fa-inverse类来切换图标颜色。您可以在父容器中 通过添加 larger icon 类来控制整体大小。
span.fa-stack.fa-lg 
  i.fa.fa-square-o.fa-stack-2x
  i.fa.fa-twitter.fa-stack-1x
|fa-twitter on fa-square-o
br
span.fa-stack.fa-lg 
  i.fa.fa-circle.fa-stack-2x
  i.fa.fa-flag.fa-stack-1x.fa-inverse
|fa-flag on fa-circle
br
span.fa-stack.fa-lg 
  i.fa.fa-square.fa-stack-2x
  i.fa.fa-terminal.fa-stack-1x.fa-inverse
|fa-terminal on fa-square
br
span.fa-stack.fa-lg 
  i.fa.fa-camera.fa-stack-1x
  i.fa.fa-ban.fa-stack-2x.text-danger
|fa-ban on fa-camera
br
10.Font Awesome 完全兼容 Bootstrap 的所有组件。
#按钮
a.btn.btn-danger(style="color:#fff;")
  i.fa.fa-trash-o.fa-lg
  |Delete
a.btn.btn-success.btn-sm(style="color:#fff;")
  i.fa.fa-cog
  |Settings

a.btn.btn-lg.btn-success(style="color:#fff;")
  i.fa.fa-flag.fa-2x.pull-left
  |Font Awesome
  br
  |Version 4.6.3

#按钮组
.btn-group
  a.btn.btn-info
    i.fa.fa-align-left(title="左对齐")
  a.btn.btn-info
    i.fa.fa-align-center(title="居中对齐")
  a.btn.btn-info
    i.fa.fa-align-right(title="右对齐")
  a.btn.btn-info
    i.fa.fa-align-justify(title="平均分布")

.input-group.margin-bottom-sm
  span.input-group-addon
    i.fa.fa-envelope-o.fa-fw
  input.form-control(type="text",placeholder="您的邮箱地址")
.input-group
  span.input-group-addon
    i.fa.fa-key.fa-fw
  input.form-control(type="password",placeholder="请输入密码")

#弹性下拉菜单
.btn-group.open
  a.btn.btn-primary
    i.fa.fa-user.fa-fw
    |用户
  a.btn.btn-primary.dropdown-toggle(data-toggle="dropdown")
    span(title="打开下拉菜单")
  ul.dropdown-menu
    li
      i.fa.fa-pencil.fa-fw
      |编辑
    li
      i.fa.fa-trash-o.fa-fw
      |删除
    li
      i.fa.fa-ban.fa-fw
      |屏蔽
    li.divider
      i.fa.fa-unlock.fa-fw
      |锁定管理员




注意：
使用 aria-hidden="true" 来隐藏纯粹用来装饰的图标


单词:
gutter 平民窟 排水沟
muted 轻柔的
primary 初级的
secondary 第二的 中等的
striped 条纹的
thumbnail 缩略图
fluid 流体
badges 徽章 
pagination 分页
breadcrumb 面包屑
collapse 折叠
flex 收缩
column 列 
pill 胶囊导航
pane 窗格
brand 品牌
custom 定制的
carousel 旋转木马
ride 骑
indicators 指标
dialog 对话
modal 情态动词
shrink 收缩
stretch 伸展
around 围绕
flexible 灵活的 柔性的
cross 交叉
awesome 令人惊叹的 可怕的
spin 旋转 
pulse 脉冲
flip 快速翻转
stack 堆栈
inverse 相反的
ban 禁止





